**************Docker Commands*********************

--->docker ps -a
--->docker pull mongo
--->docker run -d -p 27017:27017 --name shopping-mongo mongo
  * shopping-mongo->Conatiner Name
  * mongo->Image Name
  * d-Detach Mode Works in Background
  * p-port mapping
--->docker logs -f shopping-mongo
--->docker exec -it shopping-mongo /bin/bash 
  * docker exec-Will go inside Docker Container.
  * bash folder if you want to create bash  scripts.  
---->Controller Action Return Types
---->Attribute Definition on controller MethodName
    *Responsetype should be mentioned on top of the controller method
----->Update-Package -ProjectName Catalog.API
----->docker start (ContainerID)
----->Docker Compose-Multiple Container Defintion

----->Docker File will be Created with the help of visual studio orchestration support.
       *Creates Docker File,DockerCompose File,Dockercompose Running Profile

----->WORKDIR /app
      * Destination Folder where the specified soloution files gets copy
      * if /app exist it will gets copy or it will create 
      
----->"DockerFile" from each project are responsible for Extracting the Images from Container
----->Tools->Options->Search Docker->Container Tools->Docker Compose->Auto Running Image(Turn on/off for Auto Building DockerFile)
------>"DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
      * catalogdb-ContainerName
------>ports:
      - "8000:80"
      *Port Mapping the Container Port Number to Local Port
------>docker stop [containerID]
       docker rm [containerID]
------>docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml up -d
------>catalogdb:
         container_name: catalogdb
       services:
         catalogdb:[above a]
           image: mongo
-------> CATALOG.API-> http://localhost:8000/swagger/index.html
------->docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml down
------->docker ps -aq
        docker stop $(docker ps -aq) - Stops all the Image in my local computer
        docker rm $(docker ps -aq)  - Removes all the Container in my local computer.
        docker rmi $(docker images -q) - Removes All the Images
        docker system prune -  Removes Unnamed Images
        docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml up -d
        docker volume prune--Removes All the Volumes

***********************************Docker Hub Mongo Client************************
---->docker run -d -p 3000:3000 mongoclient/mongoclient



----> docker pull redis
----> docker run -d -p 6379:6379 --name aspnetrun-redis redis
      * aspnetrun-redis->Conatiner Name
      * redis->Image Name
      * d-Detach Mode Works in Background
      * p-port mapping

****************For TroubleShooting*******************************************
----> docker logs -f [conatiner-name] -To Check the Logs
----> docker exec -it [conatiner-name] /bin/bash 
      * redis-cli
         *ping
         * set name sujith
         *get name
----> Redis Cache is Used to Support Distributed Caching-> scalability and performance
      will be more when it is Hosted on cloud

-----> Install-Package Microsoft.Extensions.Caching.StackExchangeRedis
-----> Update-Package -ProjectName Basket.API

****************************Routes********************************
https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing?view=aspnetcore-6.0

------> portainer_data: used to store the User Data
------> username:admin,password:admin123@#

-----> Install-Package Npgsql
-----> Install-Package Dapper

-----> BASKET.API http://localhost:8001/swagger/index.html
-----> DISCOUNT.API http://localhost:8002/swagger/index.html
       


        










